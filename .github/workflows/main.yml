name: Deploy to ECR

on:
  push:
    branches: [master]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Generate .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_AWS_ACCESS_KEY_ID_PORVENIR: ${{ secrets.AWS_ACCESS_KEY_ID_PORVENIR }}
          envkey_AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          envkey_AWS_SECRET_ACCESS_KEY_PORVENIR: ${{ secrets.AWS_SECRET_ACCESS_KEY_PORVENIR }}
          envkey_BASE_API_URL: ${{ secrets.BASE_API_URL }}
          envkey_BASE_CLIENT_URL: ${{ secrets.BASE_CLIENT_URL }}
          envkey_BASE_SERVER_URL: ${{ secrets.BASE_SERVER_URL }}
          envkey_FACEBOOK_CALLBACK_URL: ${{ secrets.FACEBOOK_CALLBACK_URL }}
          envkey_GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
          envkey_MONGO_URI: ${{ secrets.MONGO_URI }}
          envkey_NPM_CONFIG_CACHE: ${{ secrets.NPM_CONFIG_CACHE }}
          envkey_PORT: ${{ secrets.PORT }}
          directory: var/task
          file_name: .env
          fail_on_empty: false
          sort_keys: false
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: porvenir_ecommerce
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
